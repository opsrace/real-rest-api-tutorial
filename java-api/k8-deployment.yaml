apiVersion: apps/v1
kind: Deployment
metadata:
  name: java-api-deployment  #Name of the deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: java-api #manage all the pods with label app=java-api
  template:
    metadata:
      labels:
        app: java-api # deployment should create this type of pods with label app=java-apo
    spec:
      containers:
        - name: java-api-container
          image: javaarchitect/api-example:java-2.0
          #imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: api-srv #name of the service
spec:
  selector:
    app: java-api #find/manage all the pods with label app=java-api
  type: ClusterIP #optional (default value)
  ports:
    - name: posts
      port: 8080
      targetPort: 8080s
---
apiVersion: v1
kind: Service
metadata:
  name: java-api-np-srv
spec:
  type: NodePort
  selector:
    app: java-api #select pods with label java-api
  ports:
    - name: java-api-np # This could be any name
      protocol: TCP
      port: 8091 # Port of the service itself (NodePort Service)
      targetPort: 8080 # Port of the Pod, where the traffic will be redirected
      nodePort: 30091 # Port for external access, its the port on the node(machine) of the cluster